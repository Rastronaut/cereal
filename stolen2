import serial,time
import numpy as np
import csv
#
############
# Functions
############
#

def read_tfluna_data():
    '''
    Function to read ToF data from TF-Luna
    Return:
        Distance readings from TF-Luna
    '''
    while True:
        counter = ser.in_waiting # count the number of bytes of the serial port
        if counter > 8:
            bytes_serial = ser.read(9) # read 9 bytes
            ser.reset_input_buffer() # reset buffer

            if bytes_serial[0] == 0x59 and bytes_serial[1] == 0x59: # check first two bytes
                distance = bytes_serial[2] + bytes_serial[3]*256 # distance in next two bytes
                return distance/100.0

def Average():
    ...
    avg = numpy.average(dist_array)
    return(avg)
#######
# Main
#######

# Open /dev/ttymxc2 with baudrate 115200, and defaults of 8N1, no flow control
ser = serial.Serial("/dev/ttymxc2", 115200,timeout=0) # mini UART serial device

plot_pts = 30      # points for sample rate test
read_period = 1.0   # specify time (seconds) between sensor print readings 

dist_array = []     # store distance values in an array (could use for plotting later)

if ser.isOpen() == False:
    ser.open() # open serial port if not open

print('Starting Sensor Readings...\n')

while True:
    for i in range(plot_pts):
        distance = read_tfluna_data() # read values
        dist_array.append(distance) # append distance value to array
        avg = numpy.average(dist_array)
        
        print('Distance: {0:2.2f} m', avg.\
                format(distance)) # print sample data
    time.sleep(read_period)     # wait some time before printing next reading
    
print("\nDistance DataFrame: ", dist_array)   # show the recorded distance values

ser.close() # close serial port
